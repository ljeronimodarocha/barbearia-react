[{"/barbearia-react/src/index.jsx":"1","/barbearia-react/src/App.jsx":"2","/barbearia-react/src/component/login/Login.jsx":"3","/barbearia-react/src/component/cadastro-usuario/Formulario-usuario.jsx":"4","/barbearia-react/src/component/header/Header.jsx":"5","/barbearia-react/src/component/horarioFuncionamento/FormulariohorarioFuncionamento.jsx":"6","/barbearia-react/src/component/lista-agendamentos/ListaAgendamentos.jsx":"7","/barbearia-react/src/component/logout/Logout.jsx":"8","/barbearia-react/src/component/tiposAgendamento/FormularioTipos.jsx":"9","/barbearia-react/src/api/horarios.js":"10","/barbearia-react/src/api/agendamento.js":"11","/barbearia-react/src/api/usuario.js":"12","/barbearia-react/src/api/tipo.js":"13","/barbearia-react/src/component/FormularioAgendamento/FormularioAgendamento.jsx":"14"},{"size":230,"mtime":1611093530869,"results":"15","hashOfConfig":"16"},{"size":2865,"mtime":1615655137834,"results":"17","hashOfConfig":"16"},{"size":2250,"mtime":1616798057839,"results":"18","hashOfConfig":"16"},{"size":3191,"mtime":1615247271821,"results":"19","hashOfConfig":"16"},{"size":1127,"mtime":1616797911602,"results":"20","hashOfConfig":"16"},{"size":4115,"mtime":1619139954031,"results":"21","hashOfConfig":"16"},{"size":2805,"mtime":1619141908815,"results":"22","hashOfConfig":"16"},{"size":476,"mtime":1615591053777,"results":"23","hashOfConfig":"16"},{"size":3712,"mtime":1616797840682,"results":"24","hashOfConfig":"16"},{"size":718,"mtime":1616723432936,"results":"25","hashOfConfig":"16"},{"size":559,"mtime":1619059573316,"results":"26","hashOfConfig":"16"},{"size":984,"mtime":1616798017166,"results":"27","hashOfConfig":"16"},{"size":766,"mtime":1615664330369,"results":"28","hashOfConfig":"16"},{"size":975,"mtime":1619142339330,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1w4o26a",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/barbearia-react/src/index.jsx",[],["60","61"],"/barbearia-react/src/App.jsx",[],"/barbearia-react/src/component/login/Login.jsx",[],"/barbearia-react/src/component/cadastro-usuario/Formulario-usuario.jsx",[],"/barbearia-react/src/component/header/Header.jsx",[],"/barbearia-react/src/component/horarioFuncionamento/FormulariohorarioFuncionamento.jsx",["62","63"],"/barbearia-react/src/component/lista-agendamentos/ListaAgendamentos.jsx",[],"/barbearia-react/src/component/logout/Logout.jsx",[],"/barbearia-react/src/component/tiposAgendamento/FormularioTipos.jsx",["64","65"],"import React, { useState, useEffect } from 'react';\r\nimport Tipo from '../../api/tipo';\r\nimport { TextField, Container, Box, Button } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport './FormularioTipos.css';\r\n\r\n\r\nfunction FormularioTipos(props) {\r\n    const [nome, setNome] = useState(\"\");\r\n    const [tempo, setTempo] = useState(0);\r\n    const [erros, setErros] = useState('');\r\n    const [tipos, setTipos] = useState('');\r\n    const tipo = new Tipo();\r\n    const columns = [\r\n        { width: 200, field: 'nome', headerName: 'Corte', },\r\n        {\r\n\r\n            field: 'tempo',\r\n            headerName: 'Horas',\r\n            valueGetter: (date) => {\r\n                var hours = Math.floor(date.value / 60);\r\n                var minutes = date.value % 60;\r\n                return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\r\n            },\r\n        },\r\n    ]\r\n    const enviarFormulario = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await tipo.cadastrar(nome, tempo);\r\n            listaTipos();\r\n            setNome('');\r\n            setTempo('');\r\n            setErros('');\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setErros(error.response.data);\r\n                if (error.response.status === 401) {\r\n                    sessionStorage.clear();\r\n                    props.logadoChange();\r\n                }\r\n            } else if (error.request) {\r\n                setErros(error.request);\r\n            } else {\r\n                setErros(error);\r\n            }\r\n        }\r\n        setNome(\"\");\r\n        setTempo(0);\r\n    }\r\n    const listaTipos = async () => {\r\n        try {\r\n            const lista = await tipo.listar();\r\n            setTipos(lista.data);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setErros(error.response.data);\r\n                if (error.response.status === 401) {\r\n                    sessionStorage.clear();\r\n                    props.logadoChange();\r\n                }\r\n            } else if (error.request) {\r\n                setErros(error.request);\r\n\r\n            } else {\r\n                setErros(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        async function lista() {\r\n            await listaTipos();\r\n        }\r\n        lista();\r\n    }, [])\r\n    const a = [];\r\n    for (const key in erros) {\r\n        a.push(erros[key])\r\n    }\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            {erros !== '' &&\r\n                a.map((value) => {\r\n                    return (\r\n\r\n                        <><Alert severity=\"error\">{value}</Alert></>\r\n                    );\r\n                })\r\n            }\r\n\r\n            <form action=\"\" onSubmit={e => { enviarFormulario(e) }}>\r\n                <Box className=\"caixas\">\r\n                    <TextField id=\"Nome\" fullWidth label=\"Tipo\" value={nome} type=\"text\" variant=\"outlined\" onChange={e => setNome(e.target.value)} />\r\n                </Box>\r\n                <Box className=\"caixas\">\r\n                    <TextField id=\"Tempo\" fullWidth label=\"Tempo\" value={tempo} type=\"number\" variant=\"outlined\" onChange={e => setTempo(e.target.value)} />\r\n                </Box>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Cadastrar\r\n                </Button>\r\n            </form>\r\n            {tipos !== '' &&\r\n                <div className=\"tabela\">\r\n                    <DataGrid rows={tipos} columns={columns} autoHeight />\r\n                </div>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\nexport default FormularioTipos;","/barbearia-react/src/api/horarios.js",[],"/barbearia-react/src/api/agendamento.js",[],"/barbearia-react/src/api/usuario.js",[],"/barbearia-react/src/api/tipo.js",[],"/barbearia-react/src/component/FormularioAgendamento/FormularioAgendamento.jsx",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":32,"column":19,"nodeType":"74","messageId":"75","endLine":32,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":75,"column":8,"nodeType":"78","endLine":75,"endColumn":10,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":72,"column":15,"nodeType":"81","endLine":77,"endColumn":6},{"ruleId":"76","severity":1,"message":"82","line":77,"column":8,"nodeType":"78","endLine":77,"endColumn":10,"suggestions":"83"},{"ruleId":"72","severity":1,"message":"84","line":2,"column":17,"nodeType":"74","messageId":"75","endLine":2,"endColumn":26},{"ruleId":"72","severity":1,"message":"85","line":3,"column":32,"nodeType":"74","messageId":"75","endLine":3,"endColumn":38},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'resposta' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listaHorarios'. Either include it or remove the dependency array.","ArrayExpression",["88"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'listaTipos'. Either include it or remove the dependency array.",["89"],"'useEffect' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [listaHorarios]",{"range":"94","text":"95"},"Update the dependencies array to be: [listaTipos]",{"range":"96","text":"97"},[2671,2673],"[listaHorarios]",[2426,2428],"[listaTipos]"]