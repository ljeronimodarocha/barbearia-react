[{"C:\\Users\\lucas\\git\\barbearia-react\\src\\index.jsx":"1","C:\\Users\\lucas\\git\\barbearia-react\\src\\App.jsx":"2","C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\login\\Login.jsx":"3","C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\cadastro-usuario\\Formulario-usuario.jsx":"4","C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\logout\\Logout.jsx":"5","C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\header\\Header.jsx":"6","C:\\Users\\lucas\\git\\barbearia-react\\src\\api\\usuario.js":"7","C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\lista-agendamentos\\ListaAgendamentos.jsx":"8","C:\\Users\\lucas\\git\\barbearia-react\\src\\api\\agendamento.js":"9","C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\horarioFuncionamento\\FormulariohorarioFuncionamento.jsx":"10","C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\tiposAgendamento\\FormularioTipos.jsx":"11","C:\\Users\\lucas\\git\\barbearia-react\\src\\api\\tipo.js":"12","C:\\Users\\lucas\\git\\barbearia-react\\src\\api\\horarios.js":"13"},{"size":230,"mtime":1611093530869,"results":"14","hashOfConfig":"15"},{"size":2865,"mtime":1615655137834,"results":"16","hashOfConfig":"15"},{"size":2243,"mtime":1615589448649,"results":"17","hashOfConfig":"15"},{"size":3191,"mtime":1615247271821,"results":"18","hashOfConfig":"15"},{"size":476,"mtime":1615591053777,"results":"19","hashOfConfig":"15"},{"size":1117,"mtime":1616275062746,"results":"20","hashOfConfig":"15"},{"size":983,"mtime":1615257023123,"results":"21","hashOfConfig":"15"},{"size":2624,"mtime":1616539955284,"results":"22","hashOfConfig":"15"},{"size":559,"mtime":1615754669653,"results":"23","hashOfConfig":"15"},{"size":4112,"mtime":1616723692897,"results":"24","hashOfConfig":"15"},{"size":3472,"mtime":1616539850284,"results":"25","hashOfConfig":"15"},{"size":766,"mtime":1615664330369,"results":"26","hashOfConfig":"15"},{"size":718,"mtime":1616723432936,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"sym66m",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lucas\\git\\barbearia-react\\src\\index.jsx",[],["56","57"],"C:\\Users\\lucas\\git\\barbearia-react\\src\\App.jsx",[],"C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\login\\Login.jsx",[],"C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\cadastro-usuario\\Formulario-usuario.jsx",[],"C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\logout\\Logout.jsx",[],"C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\header\\Header.jsx",[],"C:\\Users\\lucas\\git\\barbearia-react\\src\\api\\usuario.js",[],"C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\lista-agendamentos\\ListaAgendamentos.jsx",[],"C:\\Users\\lucas\\git\\barbearia-react\\src\\api\\agendamento.js",[],"C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\horarioFuncionamento\\FormulariohorarioFuncionamento.jsx",["58","59","60","61"],"C:\\Users\\lucas\\git\\barbearia-react\\src\\component\\tiposAgendamento\\FormularioTipos.jsx",["62","63"],"import React, { useState, useEffect } from 'react';\r\nimport Tipo from '../../api/tipo';\r\nimport { TextField, Container, Box, Button } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport './FormularioTipos.css'\r\n\r\n\r\nfunction FormularioTipos(props) {\r\n    const [nome, setNome] = useState(\"\");\r\n    const [tempo, setTempo] = useState(0);\r\n    const [erros, setErros] = useState('');\r\n    const [tipos, setTipos] = useState('');\r\n    const tipo = new Tipo();\r\n    const columns = [\r\n        { width: 200, field: 'nome', headerName: 'Corte', },\r\n        {\r\n\r\n            field: 'tempo',\r\n            headerName: 'Tempo',\r\n            type: 'number',\r\n        },\r\n    ]\r\n    const enviarFormulario = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await tipo.cadastrar(nome, tempo)\r\n            listaTipos()\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setErros(error.response.data)\r\n                console.log(error.response.erro);\r\n            } else if (error.request) {\r\n                setErros(error.request)\r\n                console.log(error.request);\r\n            } else {\r\n                setErros(error)\r\n            }\r\n            console.log(erros);\r\n        }\r\n        setNome(\"\");\r\n        setTempo(0);\r\n        setErros('')\r\n    }\r\n    const listaTipos = async () => {\r\n        try {\r\n            const lista = await tipo.listar()\r\n            setTipos(lista.data);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setErros(error.response.data)\r\n                if (error.response.status === 401) {\r\n                    sessionStorage.clear();\r\n                    props.logadoChange();\r\n                }\r\n            } else if (error.request) {\r\n                setErros(error.request)\r\n\r\n            } else {\r\n                setErros(error)\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        async function lista() {\r\n            await listaTipos();\r\n        }\r\n        lista();\r\n    }, [])\r\n    const a = [];\r\n    for (const key in erros) {\r\n        a.push(erros[key])\r\n    }\r\n    return (\r\n        <div>\r\n            {erros !== '' &&\r\n                a.map((value) => {\r\n                    return (\r\n                        <><Alert severity=\"error\">{value}</Alert></>\r\n                    );\r\n                })\r\n            }\r\n            <Container maxWidth=\"sm\">\r\n                <form action=\"\" onSubmit={e => { enviarFormulario(e) }}>\r\n                    <Box className=\"caixas\">\r\n                        <TextField id=\"Nome\" fullWidth label=\"Tipo\" value={nome} type=\"text\" variant=\"outlined\" onChange={e => setNome(e.target.value)} />\r\n                    </Box>\r\n                    <Box className=\"caixas\">\r\n                        <TextField id=\"Tempo\" fullWidth label=\"Tempo\" value={tempo} type=\"number\" variant=\"outlined\" onChange={e => setTempo(e.target.value)} />\r\n                    </Box>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Cadastrar\r\n                </Button>\r\n                </form>\r\n                {tipos !== '' &&\r\n                    <div className=\"tabela\">\r\n                        <DataGrid rows={tipos} columns={columns} autoHeight />\r\n                    </div>\r\n                }\r\n            </Container>\r\n        </div >)\r\n}\r\nexport default FormularioTipos;","C:\\Users\\lucas\\git\\barbearia-react\\src\\api\\tipo.js",[],"C:\\Users\\lucas\\git\\barbearia-react\\src\\api\\horarios.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":13,"column":12,"nodeType":"70","messageId":"71","endLine":13,"endColumn":17},{"ruleId":"68","severity":1,"message":"72","line":13,"column":19,"nodeType":"70","messageId":"71","endLine":13,"endColumn":27},{"ruleId":"68","severity":1,"message":"73","line":33,"column":19,"nodeType":"70","messageId":"71","endLine":33,"endColumn":27},{"ruleId":"74","severity":1,"message":"75","line":78,"column":8,"nodeType":"76","endLine":78,"endColumn":10,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":67,"column":15,"nodeType":"79","endLine":72,"endColumn":6},{"ruleId":"74","severity":1,"message":"80","line":72,"column":8,"nodeType":"76","endLine":72,"endColumn":10,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'teste' is assigned a value but never used.","Identifier","unusedVar","'setTeste' is assigned a value but never used.","'resposta' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listaHorarios'. Either include it or remove the dependency array.","ArrayExpression",["84"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'listaTipos'. Either include it or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [listaHorarios]",{"range":"90","text":"91"},"Update the dependencies array to be: [listaTipos]",{"range":"92","text":"93"},[2671,2673],"[listaHorarios]",[2096,2098],"[listaTipos]"]